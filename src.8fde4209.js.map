{"version":3,"sources":["index.js"],"names":["CountdownTimer","constructor","selector","targetDate","document","querySelector","refs","secs","mins","hours","days","startCountdownTimer","setInterval","currentDate","Date","now","time","getTime","sec","Math","floor","min","hour","day","textContent"],"mappings":";;;AAiCA,aAjCA,QAAA,oBAGA,MAAMA,EACFC,aAAY,SAACC,EAAD,WAAWC,IACdD,KAAAA,SAAWE,SAASC,cAAcH,GAClCI,KAAAA,KAAO,CACRC,KAAMH,SAASC,cAAc,2BAC7BG,KAAMJ,SAASC,cAAc,2BAC7BI,MAAOL,SAASC,cAAc,4BAC9BK,KAAMN,SAASC,cAAc,4BAE5BF,KAAAA,WAAaA,EACbQ,KAAAA,sBAITA,sBACAC,YAAa,KACLC,IAAAA,EAAcC,KAAKC,MACnBC,EAAO,KAAKb,WAAWc,UAAYJ,EACjCK,MAAAA,EAAMC,KAAKC,MAAOJ,EAAQ,IAAc,KACxCK,EAAMF,KAAKC,MAAOJ,EAAQ,KAAoB,KAC9CM,EAAOH,KAAKC,MAAOJ,EAAQ,MAAyB,MACpDO,EAAMJ,KAAKC,MAAOJ,EAAQ,OAC3BV,KAAAA,KAAKC,KAAKiB,YAAcN,EAAM,OAASA,IAAQA,EAC/CZ,KAAAA,KAAKE,KAAKgB,YAAcH,EAAM,OAASA,IAAQA,EAC/Cf,KAAAA,KAAKG,MAAMe,YAAcF,EAAO,OAASA,IAASA,EAClDhB,KAAAA,KAAKI,KAAKc,YAAcD,EAAM,OAASA,IAAQA,GAC7C,MAIf,IAAIvB,EAAe,CACfE,SAAU,WACVC,WAAY,IAAIW,KAAK,KAAM,GAAI,GAAI,EAAG,EAAG,EAAG","file":"src.8fde4209.js","sourceRoot":"../src","sourcesContent":["import './sass/main.scss';\n\n\nclass CountdownTimer {\n    constructor({selector, targetDate}) {\n        this.selector = document.querySelector(selector);\n        this.refs = {\n            secs: document.querySelector('span[data-value=\"secs\"]'),\n            mins: document.querySelector('span[data-value=\"mins\"]'),\n            hours: document.querySelector('span[data-value=\"hours\"]'),\n            days: document.querySelector('span[data-value=\"days\"]'),\n        }\n        this.targetDate = targetDate;\n        this.startCountdownTimer();\n    }\n\n\n    startCountdownTimer () {\n    setInterval (() => {\n        let currentDate = Date.now();\n        let time = this.targetDate.getTime() - currentDate;\n        const sec = Math.floor((time % (1000 * 60)) / 1000);\n        const min = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\n        const hour = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n        const day = Math.floor((time / (1000 * 60 * 60 * 24)));\n        this.refs.secs.textContent = sec < 10 ? `0${sec}` : sec;\n        this.refs.mins.textContent = min < 10 ? `0${min}` : min;\n        this.refs.hours.textContent = hour < 10 ? `0${hour}` : hour;\n        this.refs.days.textContent = day < 10 ? `0${day}` : day;\n            }, 1000)\n}\n}\n\nnew CountdownTimer({\n    selector: '#timer-1',\n    targetDate: new Date(2021, 10, 12, 0, 0, 0, 0),\n  });\n\n"]}